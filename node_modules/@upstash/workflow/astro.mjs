import {
  SDK_TELEMETRY,
  serveBase,
  serveManyBase
} from "./chunk-4GTHIL7S.mjs";

// platforms/astro.ts
var telemetry = {
  sdk: SDK_TELEMETRY,
  framework: "astro",
  runtime: process.versions.bun ? `bun@${process.versions.bun}/node@${process.version}` : `node@${process.version}`
};
function serve(routeFunction, options) {
  const POST = (apiContext) => {
    const { handler } = serveBase(
      (workflowContext) => routeFunction(workflowContext, apiContext),
      telemetry,
      options
    );
    return handler(apiContext.request);
  };
  return { POST };
}
var createWorkflow = (...params) => {
  const [routeFunction, options = {}] = params;
  return {
    workflowId: void 0,
    // @ts-expect-error because astro route function has another parameeter,
    // the RouteFunction type can't cover this. We need to make RouteFunction
    // accept more variables than simply the context. Until then, ignoring the
    // error here. Tested the usage in astro project and it's fine. TODO.
    routeFunction,
    options
  };
};
var serveMany = (workflows, options) => {
  return {
    POST: serveManyBase({
      workflows,
      getUrl(...params) {
        return params[0].request.url;
      },
      serveMethod: (...params) => serve(...params).POST,
      options
    }).handler
  };
};
export {
  createWorkflow,
  serve,
  serveMany
};
