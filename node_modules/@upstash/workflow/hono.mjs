import {
  SDK_TELEMETRY,
  serveBase,
  serveManyBase
} from "./chunk-4GTHIL7S.mjs";

// platforms/hono.ts
var telemetry = {
  sdk: SDK_TELEMETRY,
  framework: "hono"
};
var serve = (routeFunction, options) => {
  const handler = async (context) => {
    const environment = context.env;
    const request = context.req.raw;
    const { handler: serveHandler } = serveBase(routeFunction, telemetry, {
      // when hono is used without cf workers, it sends a DebugHTTPServer
      // object in `context.env`. don't pass env if this is the case:
      env: "QSTASH_TOKEN" in environment ? environment : void 0,
      ...options
    });
    return await serveHandler(request);
  };
  return handler;
};
var createWorkflow = (...params) => {
  const [routeFunction, options = {}] = params;
  return {
    routeFunction,
    options,
    workflowId: void 0
  };
};
var serveMany = (workflows, options) => {
  return serveManyBase({
    workflows,
    getUrl(params) {
      return params.req.url;
    },
    serveMethod: (...params) => serve(...params),
    options
  }).handler;
};
export {
  createWorkflow,
  serve,
  serveMany
};
